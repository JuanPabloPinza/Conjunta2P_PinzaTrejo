server:
  port: 0

spring:
  application:
    name: HEALTH-ANALYZER

  # --- Datasource Principal (CockroachDB para guardar alertas) ---
  datasource:
    url: jdbc:postgresql://localhost:26257/db_health_alerts?sslmode=disable
    username: root
    password:
    driver-class-name: org.postgresql.Driver

  # --- Datasource Secundario para Resiliencia (PostgreSQL Local) ---
  resilience-datasource:
    url: jdbc:postgresql://localhost:5432/resilience_db_analyzer # ¡NUEVA BASE DE DATOS!
    username: postgres
    password: alex
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}

management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway

#Configuracion normal
#tasks:
#  inactive-check:
#    rate: 21600000 # 6 horas en ms
#  daily-report:
#    cron: "0 0 4 * * *" # 4 AM todos los días

#Configuracion en pruebas,
tasks:
  inactive-check:
    rate: 60000              # CADA MINUTO (60,000 ms)
  daily-report:
    cron: "0 */1 * * * *"    # CADA MINUTO (en el segundo 0)
  cleanup-old-data:
    cron: "0 */5 * * * *"    # CADA 5 MINUTOS